import pytest
from fastapi.testclient import TestClient
from main import app

client = TestClient(app)

def ensure_admin():
    username = "admin"
    password = "admin123"
    email = "admin@admin.com"
    resp = client.post("/auth/register", json={"username": username, "email": email, "password": password})
    assert resp.status_code in (200, 201, 400)

def get_token():
    ensure_admin()
    username = "admin"
    password = "admin123"
    resp = client.post("/auth/login", data={"username": username, "password": password})
    assert resp.status_code == 200
    return resp.json()["access_token"]

def auth_headers():
    token = get_token()
    return {"Authorization": f"Bearer {token}"}

def test_get_provinces():
    resp = client.get("/provinces", headers=auth_headers())
    assert resp.status_code == 200
    assert isinstance(resp.json(), list)

def test_get_cities_by_province():
    resp = client.get("/provinces/1/cities", headers=auth_headers())
    assert resp.status_code in (200, 404)

def test_exam_points_import():
    resp = client.post("/exam-points/import", json={"data": []}, headers=auth_headers())
    assert resp.status_code in (200, 422)

def test_exam_papers_upload():
    with open(__file__, "rb") as f:
        files = {"file": ("test.txt", f, "text/plain")}
        resp = client.post("/exam-papers/upload", files=files, headers=auth_headers())
        assert resp.status_code in (200, 400, 422)

def test_ollama_status():
    resp = client.get("/ollama/status", headers=auth_headers())
    assert resp.status_code == 200
    assert "status" in resp.json()

def test_user_approve_and_toggle():
    resp = client.put("/users/1/approve", json={"is_approved": True}, headers=auth_headers())
    assert resp.status_code in (200, 404)
    resp2 = client.put("/users/1/toggle-status", headers=auth_headers())
    assert resp2.status_code in (200, 404)

def test_user_delete():
    resp = client.delete("/users/1", headers=auth_headers())
    assert resp.status_code in (200, 404)

def test_exam_paper_extract_with_ollama():
    resp = client.post("/exam-papers/1/extract-with-ollama", headers=auth_headers())
    assert resp.status_code in (200, 404, 422)

def test_exam_questions_crud():
    resp = client.get("/exam-questions", headers=auth_headers())
    assert resp.status_code == 200
    resp2 = client.get("/exam-questions/1", headers=auth_headers())
    assert resp2.status_code in (200, 404)
    resp3 = client.post("/exam-questions", json={}, headers=auth_headers())
    assert resp3.status_code in (422, 400)
    resp4 = client.put("/exam-questions/1", json={}, headers=auth_headers())
    assert resp4.status_code in (422, 404, 400)
    resp5 = client.delete("/exam-questions/1", headers=auth_headers())
    assert resp5.status_code in (200, 404) 